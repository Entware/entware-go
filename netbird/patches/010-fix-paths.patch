--- a/client/cmd/root.go
+++ b/client/cmd/root.go
@@ -88,11 +88,11 @@ func Execute() error {
 }
 
 func init() {
-	defaultConfigPathDir = "/etc/netbird/"
-	defaultLogFileDir = "/var/log/netbird/"
+	defaultConfigPathDir = "/opt/etc/netbird/"
+	defaultLogFileDir = "/opt/var/log/netbird/"
 
-	oldDefaultConfigPathDir = "/etc/wiretrustee/"
-	oldDefaultLogFileDir = "/var/log/wiretrustee/"
+	oldDefaultConfigPathDir = "/opt/etc/wiretrustee/"
+	oldDefaultLogFileDir = "/opt/var/log/wiretrustee/"
 
 	switch runtime.GOOS {
 	case "windows":
@@ -111,7 +111,7 @@ func init() {
 	oldDefaultConfigPath = oldDefaultConfigPathDir + "config.json"
 	oldDefaultLogFile = oldDefaultLogFileDir + "client.log"
 
-	defaultDaemonAddr := "unix:///var/run/netbird.sock"
+	defaultDaemonAddr := "unix:///opt/var/run/netbird.sock"
 	if runtime.GOOS == "windows" {
 		defaultDaemonAddr = "tcp://127.0.0.1:41731"
 	}
--- a/client/iface/configurer/usp.go
+++ b/client/iface/configurer/usp.go
@@ -216,7 +216,7 @@ func (t *WGUSPConfigurer) Close() {
 	}
 
 	if runtime.GOOS == "linux" {
-		sockPath := "/var/run/wireguard/" + t.deviceName + ".sock"
+		sockPath := "/opt/var/run/wireguard/" + t.deviceName + ".sock"
 		if _, statErr := os.Stat(sockPath); statErr == nil {
 			_ = os.Remove(sockPath)
 		}
--- a/client/internal/dns/consts_linux.go
+++ b/client/internal/dns/consts_linux.go
@@ -3,5 +3,5 @@
 package dns
 
 const (
-	fileUncleanShutdownResolvConfLocation = "/var/lib/netbird/resolv.conf"
+	fileUncleanShutdownResolvConfLocation = "/opt/var/lib/netbird/resolv.conf"
 )
--- a/client/internal/routemanager/systemops/systemops_linux.go
+++ b/client/internal/routemanager/systemops/systemops_linux.go
@@ -29,7 +29,7 @@ const (
 	NetbirdVPNTableName = "netbird"
 
 	// rtTablesPath is the path to the file containing the routing table names.
-	rtTablesPath = "/etc/iproute2/rt_tables"
+	rtTablesPath = "/opt/etc/iproute2/rt_tables"
 
 	// ipv4ForwardingPath is the path to the file containing the IP forwarding setting.
 	ipv4ForwardingPath = "net.ipv4.ip_forward"
--- a/client/internal/statemanager/path.go
+++ b/client/internal/statemanager/path.go
@@ -13,7 +13,7 @@ func GetDefaultStatePath() string {
 	case "windows":
 		return filepath.Join(os.Getenv("PROGRAMDATA"), "Netbird", "state.json")
 	case "darwin", "linux":
-		return "/var/lib/netbird/state.json"
+		return "/opt/var/lib/netbird/state.json"
 	case "freebsd", "openbsd", "netbsd", "dragonfly":
 		return "/var/db/netbird/state.json"
 	}
--- a/client/system/osrelease_unix.go
+++ b/client/system/osrelease_unix.go
@@ -11,9 +11,9 @@ import (
 )
 
 func readOsReleaseFile() (osName string, osVer string) {
-	file, err := os.Open("/etc/os-release")
+	file, err := os.Open("/opt/etc/os-release")
 	if err != nil {
-		log.Warnf("failed to open file /etc/os-release: %s", err)
+		log.Warnf("failed to open file /opt/etc/os-release: %s", err)
 		return "", ""
 	}
 	defer file.Close()
--- a/client/ui/client_ui.go
+++ b/client/ui/client_ui.go
@@ -45,7 +45,7 @@ const (
 func main() {
 	var daemonAddr string
 
-	defaultDaemonAddr := "unix:///var/run/netbird.sock"
+	defaultDaemonAddr := "unix:///opt/var/run/netbird.sock"
 	if runtime.GOOS == "windows" {
 		defaultDaemonAddr = "tcp://127.0.0.1:41731"
 	}
@@ -62,7 +62,7 @@ func main() {
 	var errorMSG string
 	flag.StringVar(&errorMSG, "error-msg", "", "displays a error message window")
 
-	tmpDir := "/tmp"
+	tmpDir := "/opt/tmp"
 	if runtime.GOOS == "windows" {
 		tmpDir = os.TempDir()
 	}
--- a/client/ui/config/config.go
+++ b/client/ui/config/config.go
@@ -17,14 +17,14 @@ type ClientConfig struct {
 // We are creating this package to extract utility functions from the cmd package
 // reading and parsing the configurations for the client should be done here
 func Config() *ClientConfig {
-	defaultConfigPath := "/etc/wiretrustee/config.json"
-	defaultLogFile := "/var/log/wiretrustee/client.log"
+	defaultConfigPath := "/opt/etc/wiretrustee/config.json"
+	defaultLogFile := "/opt/var/log/wiretrustee/client.log"
 	if runtime.GOOS == "windows" {
 		defaultConfigPath = os.Getenv("PROGRAMDATA") + "\\Wiretrustee\\" + "config.json"
 		defaultLogFile = os.Getenv("PROGRAMDATA") + "\\Wiretrustee\\" + "client.log"
 	}
 
-	defaultDaemonAddr := "unix:///var/run/wiretrustee.sock"
+	defaultDaemonAddr := "unix:///opt/var/run/wiretrustee.sock"
 	if runtime.GOOS == "windows" {
 		defaultDaemonAddr = "tcp://127.0.0.1:41731"
 	}
--- a/management/cmd/defaults.go
+++ b/management/cmd/defaults.go
@@ -1,13 +1,13 @@
 package cmd
 
 const (
-	defaultMgmtDataDir   = "/var/lib/netbird/"
-	defaultMgmtConfigDir = "/etc/netbird"
-	defaultLogDir        = "/var/log/netbird"
+	defaultMgmtDataDir   = "/opt/var/lib/netbird/"
+	defaultMgmtConfigDir = "/opt/etc/netbird"
+	defaultLogDir        = "/opt/var/log/netbird"
 
-	oldDefaultMgmtDataDir   = "/var/lib/wiretrustee/"
-	oldDefaultMgmtConfigDir = "/etc/wiretrustee"
-	oldDefaultLogDir        = "/var/log/wiretrustee"
+	oldDefaultMgmtDataDir   = "/opt/var/lib/wiretrustee/"
+	oldDefaultMgmtConfigDir = "/opt/etc/wiretrustee"
+	oldDefaultLogDir        = "/opt/var/log/wiretrustee"
 
 	defaultMgmtConfig    = defaultMgmtConfigDir + "/management.json"
 	defaultLogFile       = defaultLogDir + "/management.log"
--- a/signal/cmd/root.go
+++ b/signal/cmd/root.go
@@ -39,8 +39,8 @@ func Execute() error {
 
 func init() {
 	stopCh = make(chan int)
-	defaultLogFile = "/var/log/netbird/signal.log"
-	defaultSignalSSLDir = "/var/lib/netbird/"
+	defaultLogFile = "/opt/var/log/netbird/signal.log"
+	defaultSignalSSLDir = "/opt/var/lib/netbird/"
 
 	if runtime.GOOS == "windows" {
 		defaultLogFile = os.Getenv("PROGRAMDATA") + "\\Netbird\\" + "signal.log"
